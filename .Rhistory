install.packages('rattle')
install.packages("https://togaware.com/access/rattle_5.0.14.tar.gz", repos=NULL, type="source")
install.packages("https://togaware.com/access/rattle_5.0.14.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/RGtk2/RGtk2_2.20.31.tar.gz", repos=NULL)
install.packages("RGtk2")
trello <- read.csv("~/Code/Python/Trello/trello")
View(trello)
View(trello)
library(plotly)
data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
p <- plot_ly(data, x = ~Women, y = ~Men, text = ~School, type = 'scatter', mode = 'markers',
marker = list(size = ~gap, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="bubble-simple")
chart_link
install(plotly)
install.packages("plotly")
library(plotly)
Sys.getenv("R_LIBS_USER")
install.packages("plotly")
library(plotly)
read.csv("https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
p <- plot_ly(data, x = ~Women, y = ~Men, text = ~School, type = 'scatter', mode = 'markers',
marker = list(size = ~gap, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="bubble-simple")
chart_link
"https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
gap <-10
p <- plot_ly(data, x = ~Women, y = ~Men, text = ~School, type = 'scatter', mode = 'markers',
marker = list(size = ~gap, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="bubble-simple")
chart_link
library(plotly)
p <- plot_ly(trello, x = ~importance, y = ~days, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p
p <- plot_ly(trello, x = ~days, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
ays, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p
View(trello)
View(trello)
trello <- read.csv("~/Code/Python/Trello/trello")
library(plotly)
p <- plot_ly(trello, x = ~days, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p
trello <- read.csv("~/Code/Python/Trello/trello")
library(plotly)
p <- plot_ly(trello, x = ~days, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p
trello.urgency <- days
trello.urgency <- trello.days
trello$urgency <- trello$days
View(trello)
View(trello)
trello$urgency <- trello$days/trello$days.max
trello$urgency <- trello$days/trello$days.max()
trello$urgency <- trello$days/max(trello$days)
View(trello)
View(trello)
trello$urgency <- 1-trello$days/max(trello$days)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(showgrid = TRUE))
p
at <- seq(from = 1, to = 3, by = 200000)
axis(side = 1, at = at)
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(showgrid = TRUE))
at <- seq(from = 1, to = 3, by = 200000)
axis(side = 1, at = at)
p
at <- seq(from = 1, to = 3, by = 200000)
axis(side = 1, at = at)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(showgrid = TRUE))
p
a <- list(
autotick = FALSE,
ticks = "outside",
tick0 = 0,
dtick = 0.25,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue")
showgrid = TRUE
)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(a),
yaxis = list(a))
p
a <- list(
autotick = FALSE,
ticks = "outside",
tick0 = 0,
dtick = 0.25,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue")
showgrid = TRUE
)
a <- list(
autotick = FALSE,
ticks = "outside",
tick0 = 0,
dtick = 0.25,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue"),
showgrid = TRUE
)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(a),
yaxis = list(a))
p
a <- list(
autotick = FALSE,
ticks = "outside",
tick0 = 0,
dtick = 1,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue"),
showgrid = TRUE
)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(a),
yaxis = list(a))
p
View(trello)
View(trello)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(tickvals=~trello$importance,ticktext=~trello$importance),
yaxis = list(a))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(tickvals=~trello$importance,ticktext=~trello$importance),
)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(tickvals=~trello$importance,ticktext=~trello$importance),
yaxis = list(showgrid = TRUE))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE)),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance)
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
python.load("GetTrello.py")
library(python)
library(rPython)
install.packages("rPython")
library(rPython)
python.load("GetTrello.py")
python.load("~Users/m/code/Python/Trello/GetTrello.py")
python.load("~/Users/m/code/Python/Trello/GetTrello.py")
getwd()
python.load("code/Python/Trello/GetTrello.py")
G
python.load("code/Python/Trello/GetTrello.py")
python.load("code/Python/Trello/GetTrello.py")
library(rPython)
python.load("code/Python/Trello/GetTrello.py")
trello <- read.csv("~/Code/Python/Trello/trello")
library(rPython)
python.load("code/Python/Trello/GetTrello.py")
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*10, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p <- plot_ly(data, x = ~Women, y = ~Men, text = ~School, type = 'scatter', mode = 'markers',
marker = list(size = ~gap, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
trello <- read.csv("~/Code/Python/Trello/trello")
library(plotly)
trello$urgency <- 1-trello$days/max(trello$days)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
getwd()
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*10, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*5, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
View(trello)
View(trello)
textfont = list(color = '#000000', size = 16)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*5, opacity = 0.5),
text = ~name,
textfont = list(color = '#000000', size = 16)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
library(rPython)
python.load('/Code/Python/Trello/GetTrello.py')
python.load('GetTrello.py')
getwd()
python.load('/Code/Python/Trello/GetTrello.py')
setwd('/Code/Python/Trello/')
setwd('Users/m/code/Python/Trello/')
setwd('~Users/m/Code/Python/Trello/')
getwd()
setwd(getwd())
setwd(getwd()+'code')
wd <- getwd()
wd +'code'
wd + "code"
wd <- getwd()
wd
wd[0]
setwd("Users/m")
setwd("Users/m/code")
normalizePath(wd)
normalizePath(wd) = "d"
normalizePath(wd) + "d"
normalizePath("Users/m/code")
normalizePath("~Users/m/code")
path.expand('~code')
path.expand('~/Python/Trello')
getwd()
setwd()
ls()
python.load('GetTrello.py')
python.load('/Code/Python/Trello/GetTrello.py')
getwd()
setwd('Users/m/code')
setwd('/Users/m/code')
setwd('/Users/m/code/Python/Trello')
python.load('GetTrello.py')
python.load('GetTrello.py')
python.load('GetTrello.py')
python.load('GetTrello.py')
library(plotly)
setwd('/Users/m/code/Python/Trello')
trello <- read.csv("trello")
trello$urgency <- 1-trello$days/max(trello$days)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*5, opacity = 0.5),
text = ~name,
textfont = list(color = '#000000', size = 16)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
setwd('/Users/m/code/Python/Trello')
trello <- read.csv("trello")
trello$urgency <- 1-trello$days/max(trello$days)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*5, opacity = 0.5),
text = ~name,
textfont = list(color = '#000000', size = 16)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
setwd('/Users/m/code/Python/Trello')
trello <- read.csv("trello")
trello$urgency <- 1-trello$days/max(trello$days)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*5, opacity = 0.5),
text = ~name,
textfont = list(color = '#000000', size = 16)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
trello$urgency <- 1-log(trello$days)/max(trello$days)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*5, opacity = 0.5),
text = ~name,
textfont = list(color = '#000000', size = 16)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
trello$urgency <- 1-log(trello$days)/max(log(trello$days))
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*5, opacity = 0.5),
text = ~name,
textfont = list(color = '#000000', size = 16)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
library(plotly)
setwd('/Users/m/code/Python/Trello')
trello <- read.csv("trello")
trello$urgency <- 1-log(trello$days)/max(log(trello$days))
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*5, opacity = 0.5),
text = ~name,
textfont = list(color = '#000000', size = 16)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*5, opacity = 0.5),
text = ~name,
textfont = list(color = '#000000', size = 16, textposition = 'bottom')) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*5, opacity = 0.5),
text = ~name,
mode='markers+text',
textfont = list(color = '#000000', size = 16, textposition = 'bottom')) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
hoverinfo = ~name %>%
p
hoverinfo = ~name %>%
p
marker = list(size = ~complexity*5, opacity = 0.5)%>%
xaxis = list(showgrid = TRUE),
hoverinfo = ~name %>%
xaxis = list(showgrid = TRUE),
%>%
marker = list(size = ~complexity*5, opacity = 0.5),%>%
marker = list(size = ~complexity*5, opacity = 0.5)%>%
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*5, opacity = 0.5),
hoverinfo = ~name )%>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
View(trello)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5),
hoverinfo = ~name )%>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*5, opacity = 0.5),
hoverinfo = ~name )%>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers+text',
marker = list(size = ~complexity*5, opacity = 0.5),
hoverinfo = ~name )%>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers+text',
marker = list(size = ~complexity*5, opacity = 0.5),
text = ~name,
hoverinfo = ~name )%>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers+text',
marker = list(size = ~complexity*5, opacity = 0.5),
text = ~name,
textposition = 'bottom',
hoverinfo = ~name )%>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
library(plotly)
setwd('/Users/m/code/Python/Trello')
trello <- read.csv("trello")
trello$urgency <- 1-log(trello$days)/max(log(trello$days))
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers+text',
marker = list(size = ~complexity*5, opacity = 0.5),
text = ~name,
textposition = 'bottom',
hoverinfo = ~name )%>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
library(plotly)
setwd('/Users/m/code/Python/Trello')
trello <- read.csv("trello")
trello$urgency <- 1-log(trello$days)/max(log(trello$days))
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers+text',
marker = list(size = ~complexity*5, opacity = 0.5),
text = ~name,
textposition = 'bottom',
hoverinfo = ~name )%>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
